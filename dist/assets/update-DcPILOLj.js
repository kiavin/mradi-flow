import{useRouter as d,useRoute as f}from"./vue-router-Ds9KUoJm.js";import{_ as v}from"./form-kh1kFOVk.js";import{b as p}from"./index-BMqAfrzp.js";import{g,r as s,w as _,a as h,e as B,i as w,O as b,C as x}from"./@vue-D5jJVPgi.js";import"./BaseInput-AVxokN4q.js";/* empty css                                                                  */import"./BaseButton-WTmgFy-8.js";import"./BaseLabel-BabrV9SY.js";/* empty css                                                                  */import"./pinia-BWRdMQcg.js";import"./bootstrap-r_TW8pGT.js";import"./@popperjs-BEKk9TLb.js";import"./bootstrap-vue-next-CI7J1iGq.js";import"./izitoast-CqdWWGAA.js";import"./sweetalert2-89IKscqO.js";import"./@fortawesome-BMRTUbaC.js";import"./jspdf-BHjgPkY0.js";import"./@babel-BgpAVVkQ.js";import"./fflate-DE92GPtl.js";import"./@vueuse-BFKO5FPz.js";import"./xlsx-VQGdcWwX.js";import"./jspdf-autotable-DwCSpOYb.js";import"./@tsparticles-RHRfPQQI.js";import"./pinia-plugin-persistedstate-BuM6D3kL.js";import"./destr-BPvN1X9m.js";import"./deep-pick-omit-CegYQlcN.js";import"./lodash-CW-aI5JM.js";import"./crypto-js-C9xuVu9R.js";import"./axios-xsH4HHeE.js";import"./qs-Dop67Io4.js";import"./side-channel-DfNisRws.js";import"./es-errors-CxTyLFAO.js";import"./object-inspect-CwG9orBb.js";import"./side-channel-list-CVgrowBt.js";import"./side-channel-map-Czb7NFry.js";import"./get-intrinsic-BpLglCTt.js";import"./es-object-atoms-BR76m4z7.js";import"./math-intrinsics-DP1tGiab.js";import"./gopd-C1lCZ5Qs.js";import"./es-define-property-D_7cP-M3.js";import"./has-symbols-BaUvM3gb.js";import"./get-proto-Cd0SCNDH.js";import"./dunder-proto-DSwuxXkl.js";import"./call-bind-apply-helpers-VtLnLD2e.js";import"./function-bind-CHqF18-c.js";import"./hasown-DwiY0sux.js";import"./call-bound-BuGV4nFB.js";import"./side-channel-weakmap-DmcBNuf_.js";import"./smooth-scrollbar-CSiRJ_Pw.js";import"./core-js-BA3D9nVJ.js";import"./@vueform-b-21xuRD.js";import"./vue3-circle-progress-DRe7pzrA.js";import"./vue-Aiaqh0QQ.js";import"./vue3-apexcharts-CSHbnzTQ.js";import"./apexcharts-AYwITVQt.js";const y={class:"card p-3"},Gt={__name:"update",setup(C){const{proxy:u}=g(),n=d(),i=`/v1/iam/groups/${f().params.id}`,{data:o,isLoading:c}=p(i,{method:"GET"}),m=s({}),e=s({});_(o,()=>{o.value&&(m.value=o.value.dataPayload.data||{})});const l=async a=>{const{request:t,error:r}=p(i,{method:"PUT"});await t(a),r.value&&(console.log("Error",r.value),e.value=r.value),!r.value&&(u.$showAlert({title:"Success",icon:"success",text:"Groups Updated successfully",showConfirmButton:!1,showCancelButton:!1,draggable:!0,timer:2e3,timerProgressBar:!0}),setTimeout(()=>{n.push({name:"iam/groups"})},2e3))};return(a,t)=>(B(),h("div",y,[t[0]||(t[0]=w("h1",{class:"h4 mt-2"},"Update Groups",-1)),b(v,{formData:m.value,error:e.value,isLoading:x(c),onSubmit:l},null,8,["formData","error","isLoading"])]))}};export{Gt as default};
