import{g as S}from"./apexcharts-AYwITVQt.js";import{d as Y,h as Z,r as w,ai as q,o as J,g as $,f as F,t as G,w as u,n as H}from"./@vue-D5jJVPgi.js";const A=["animationEnd","beforeMount","mounted","updated","click","mouseMove","mouseLeave","legendClick","markerClick","selection","dataPointSelection","dataPointMouseEnter","dataPointMouseLeave","beforeZoom","beforeResetZoom","zoomed","scrolled","brushScrolled"],g=Y({name:"apexchart",props:{options:{type:Object},type:{type:String},series:{type:Array,required:!0},width:{default:"100%"},height:{default:"auto"}},emits:A,setup(o,{emit:b}){const m=w(null),t=w(null),v=e=>e&&typeof e=="object"&&!Array.isArray(e)&&e!=null,y=(e,n)=>{typeof Object.assign!="function"&&function(){Object.assign=function(a){if(a==null)throw new TypeError("Cannot convert undefined or null to object");let p=Object(a);for(let r=1;r<arguments.length;r++){let c=arguments[r];if(c!=null)for(let f in c)c.hasOwnProperty(f)&&(p[f]=c[f])}return p}}();let s=Object.assign({},e);return v(e)&&v(n)&&Object.keys(n).forEach(a=>{v(n[a])?a in e?s[a]=y(e[a],n[a]):Object.assign(s,{[a]:n[a]}):Object.assign(s,{[a]:n[a]})}),s},i=async()=>{if(await H(),t.value)return;const e={chart:{type:o.type||o.options.chart.type||"line",height:o.height,width:o.width,events:{}},series:o.series},n=o.options.chart?o.options.chart.events:null;A.forEach(a=>{let p=(...r)=>b(a,...r);e.chart.events[a]=(...r)=>{p(...r),n&&n.hasOwnProperty(a)&&n[a](...r)}});const s=y(o.options,e);return t.value=new S(m.value,s),t.value.render()},d=()=>(h(),i()),h=()=>{t.value.destroy(),t.value=null},O=(e,n)=>t.value.updateSeries(e,n),j=(e,n,s,a)=>t.value.updateOptions(e,n,s,a),x=e=>t.value.toggleSeries(e),P=e=>{t.value.showSeries(e)},C=e=>{t.value.hideSeries(e)},M=(e,n)=>t.value.appendSeries(e,n),k=()=>{t.value.resetSeries()},E=(e,n)=>{t.value.toggleDataPointSelection(e,n)},D=e=>t.value.appendData(e),L=(e,n)=>t.value.zoomX(e,n),R=e=>t.value.dataURI(e),X=e=>t.value.setLocale(e),z=(e,n)=>{t.value.addXaxisAnnotation(e,n)},I=(e,n)=>{t.value.addYaxisAnnotation(e,n)},U=(e,n)=>{t.value.addPointAnnotation(e,n)},B=(e,n)=>{t.value.removeAnnotation(e,n)},T=()=>{t.value.clearAnnotations()};q(()=>{window.ApexCharts=S}),J(()=>{m.value=$().proxy.$el,i()}),F(()=>{t.value&&h()});const l=G(o);return u(l.options,()=>{!t.value&&o.options?i():t.value.updateOptions(o.options)}),u(l.series,()=>{!t.value&&o.series?i():t.value.updateSeries(o.series)},{deep:!0}),u(l.type,()=>{d()}),u(l.width,()=>{d()}),u(l.height,()=>{d()}),{chart:t,init:i,refresh:d,destroy:h,updateOptions:j,updateSeries:O,toggleSeries:x,showSeries:P,hideSeries:C,resetSeries:k,zoomX:L,toggleDataPointSelection:E,appendData:D,appendSeries:M,addXaxisAnnotation:z,addYaxisAnnotation:I,addPointAnnotation:U,removeAnnotation:B,clearAnnotations:T,setLocale:X,dataURI:R}},render(){return Z("div",{class:"vue-apexcharts"})}}),K=o=>{o.component(g.name,g)};g.install=K;export{g as m};
